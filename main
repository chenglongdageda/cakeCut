var eD = !1;
        if (g)
            try {
                var eI = {};
                Object.defineProperty(eI, "passive", {
                    get: function() {
                        eD = !0
                    }
                }),
                window.addEventListener("test", eI, eI),
                window.removeEventListener("test", eI, eI)
            } catch (e) {
                eD = !1
            }
        function eU(e, n, t, r, l, a, u, o, i) {
            var s = Array.prototype.slice.call(arguments, 3);
            try {
                n.apply(t, s)
            } catch (e) {
                this.onError(e)
            }
        }
        var eV = !1
          , e$ = null
          , eA = !1
          , ej = null
          , eB = {
            onError: function(e) {
                eV = !0,
                e$ = e
            }
        };
        function eH(e, n, t, r, l, a, u, o, i) {
            eV = !1,
            e$ = null,
            eU.apply(eB, arguments)
        }
        function eW(e) {
            var n = e
              , t = e;
            if (e.alternate)
                for (; n.return; )
                    n = n.return;
            else {
                e = n;
                do
                    0 != (4098 & (n = e).flags) && (t = n.return),
                    e = n.return;
                while (e)
            }
            return 3 === n.tag ? t : null
        }
        function eQ(e) {
            if (13 === e.tag) {
                var n = e.memoizedState;
                if (null === n && null !== (e = e.alternate) && (n = e.memoizedState),
                null !== n)
                    return n.dehydrated
            }
            return null
        }
        function eq(e) {
            if (eW(e) !== e)
                throw Error(f(188))
        }
        function eK(e) {
            return null !== (e = function(e) {
                var n = e.alternate;
                if (!n) {
                    if (null === (n = eW(e)))
                        throw Error(f(188));
                    return n !== e ? null : e
                }
                for (var t = e, r = n; ; ) {
                    var l = t.return;
                    if (null === l)
                        break;
                    var a = l.alternate;
                    if (null === a) {
                        if (null !== (r = l.return)) {
                            t = r;
                            continue
                        }
                        break
                    }
                    if (l.child === a.child) {
                        for (a = l.child; a; ) {
                            if (a === t)
                                return eq(l),
                                e;
                            if (a === r)
                                return eq(l),
                                n;
                            a = a.sibling
                        }
                        throw Error(f(188))
                    }
                    if (t.return !== r.return)
                        t = l,
                        r = a;
                    else {
                        for (var u = !1, o = l.child; o; ) {
                            if (o === t) {
                                u = !0,
                                t = l,
                                r = a;
                                break
                            }
                            if (o === r) {
                                u = !0,
                                r = l,
                                t = a;
                                break
                            }
                            o = o.sibling
                        }
                        if (!u) {
                            for (o = a.child; o; ) {
                                if (o === t) {
                                    u = !0,
                                    t = a,
                                    r = l;
                                    break
                                }
                                if (o === r) {
                                    u = !0,
                                    r = a,
                                    t = l;
                                    break
                                }
                                o = o.sibling
                            }
                            if (!u)
                                throw Error(f(189))
                        }
                    }
                    if (t.alternate !== r)
                        throw Error(f(190))
                }
